---
// src/pages/discounts/index.astro
import DashboardLayout from "@/layouts/DashboardLayout.astro";
import DiscountTable from "@/components/discounts/DiscountTable.astro";
import DiscountCreationModal from "@/components/discounts/DiscountCreationModal.astro";
import { discountService } from "@/services/discountService";

const discounts = await discountService.getAllDiscounts();

const categories = [...new Set(discounts.map(d => d.category))];
const operationTypes = [...new Set(discounts.map(d => d.operationType))];
const statuses = [...new Set(discounts.map(d => d.status))];
---

<DashboardLayout title="Discounts">
    <!-- Include modal directly, not in a container -->
    <DiscountCreationModal />

    <div class="space-y-4">
        <script id="discount-data" type="application/json" set:html={JSON.stringify(discounts)}>
        </script>

        <!-- Header -->
        <div class="flex justify-between items-center py-4">
            <h1 class="text-2xl font-semibold">Discount Management</h1>
            <button
                onclick="window.openDiscountCreationModal()"
                class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md flex items-center gap-2"
            >
                <span class="material-icons text-sm">add</span>
                Create New Discount
            </button>
        </div>

        <!-- Rest of the filters and table remain the same -->
        <div class="grid grid-cols-4 gap-4">
            <!-- ... filters code remains the same ... -->
        </div>

        <DiscountTable data={discounts} />
    </div>
</DashboardLayout>

<script>
    import { discounts } from '@/store/discountStore';

    // Initialize store with server data
    const dataElement = document.getElementById('discount-data');
    if (dataElement?.textContent) {
        const initialData = JSON.parse(dataElement.textContent);
        discounts.set(initialData);
    }

    // Listen for successful discount creation
    document.addEventListener('discount-created', (e: any) => {
        // Add the new discount to the store
        const currentDiscounts = discounts.get();
        discounts.set([e.detail, ...currentDiscounts]);
        
        // Show success message
        alert('Discount created successfully!');
        
        // Reload page to ensure everything is in sync
        window.location.reload();
    });

    // Filter functionality
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const categoryFilter = document.getElementById('categoryFilter') as HTMLSelectElement;
    const typeFilter = document.getElementById('typeFilter') as HTMLSelectElement;
    const statusFilter = document.getElementById('statusFilter') as HTMLSelectElement;

    function filterTable() {
        const searchTerm = searchInput?.value.toLowerCase() || '';
        const category = categoryFilter?.value.toLowerCase() || '';
        const type = typeFilter?.value.toLowerCase() || '';
        const status = statusFilter?.value.toLowerCase() || '';

        const rows = document.querySelectorAll('tbody tr');

        rows.forEach(row => {
            const code = row.querySelector('td:nth-child(2)')?.textContent?.toLowerCase() || '';
            const description = row.querySelector('td:nth-child(3)')?.textContent?.toLowerCase() || '';
            const rowCategory = row.querySelector('td:nth-child(4)')?.textContent?.toLowerCase() || '';
            const rowStatus = row.querySelector('td:nth-child(6)')?.textContent?.toLowerCase() || '';

            const matchesSearch = code.includes(searchTerm) || description.includes(searchTerm);
            const matchesCategory = !category || rowCategory.includes(category);
            const matchesType = !type || rowCategory.includes(type);
            const matchesStatus = !status || rowStatus.includes(status);

            row.classList.toggle('hidden', 
                !matchesSearch || !matchesCategory || !matchesType || !matchesStatus
            );
        });
    }

    // Add event listeners to filters
    searchInput?.addEventListener('input', filterTable);
    categoryFilter?.addEventListener('change', filterTable);
    typeFilter?.addEventListener('change', filterTable);
    statusFilter?.addEventListener('change', filterTable);
</script>